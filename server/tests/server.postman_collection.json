{
	"info": {
		"_postman_id": "393c07bf-6429-4e7a-a57c-e8d1276b7cd4",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29410775"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Correct user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.username).to.eql(\"user1\");\r",
									"  pm.expect(jsonData.password).to.eql(\"123\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Same user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);\r",
									"token = bodyData.token;\r",
									"pm.environment.set(\"access_token\", token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Incorrect login - username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"absifuashfoiasf\",\r\n    \"password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "incorrect login - password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/:username",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username"
							],
							"query": [
								{
									"key": "authorization",
									"value": "{{loginToken}}",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/:{{invalid_username}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":{{invalid_username}}"
							],
							"variable": [
								{
									"key": "{{invalid_username}}",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"response should have updated password\", function() {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.password).to.eql(\"1234\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"password\": \"16632\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "invaliduser"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/:username",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"  pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/users/:username",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "invaliduser"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Expenses",
			"item": [
				{
					"name": "No expenses created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/expenses/",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ERROR CREATE(POST)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function(){\r",
									"    pm.response.to.have.status(400);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Test Expense\",\r\n    \"userId\": \"5f5b6a4b2e35a41c6c4624ab\", \r\n    \"date\": \"2023-09-11T12:00:00.000Z\", \r\n    \"categoryId\": \"5f5b6a4b2e35a41c6c4624ac\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Correct expense",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"expenseId\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function (){\r",
									"    pm.response.to.have.status(201);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Attribute name is part of Expense entity\", function(){\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(pm.response.json()).to.have.property(\"amount\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Test Expense\",\r\n    \"amount\": 50.0,\r\n    \"userId\": \"5f5b6a4b2e35a41c6c4624ab\", \r\n    \"date\": \"2023-09-11T12:00:00.000Z\", \r\n    \"categoryId\": \"5f5b6a4b2e35a41c6c4624ac\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "All expenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{expenseId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Expense by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{expenseId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function(){\r",
									"    pm.response.to.have.status(500);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								":id"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "6501b9b88dd43022fe39998"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Expense by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Updated Test Expense\",\r\n    \"amount\": 75.0,\r\n    \"userId\": \"5f5b6a4b2e35a41c6c4624ad\",\r\n    \"date\": \"2023-09-15T14:30:00.000Z\",\r\n    \"categoryId\": \"5f5b6a4b2e35a41c6c4624ad\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{expenseId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Expense by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"Updated Test Expense Description after patch\",\r\n  \"amount\": 82\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{expenseId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function(){\r",
									"    pm.response.to.have.status(500);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"Updated Test Expense Description after patch\",\r\n  \"amount\": 82\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6501b9b88dd43022fe39998"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Expense by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{expenseId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function(){\r",
									"    pm.response.to.have.status(500);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6501b9b88dd43022fe39998"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Correct expense",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function (){\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(pm.response.json()).to.have.property(\"amount\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Test Expense\",\r\n    \"amount\": 50.0,\r\n    \"userId\": \"5f5b6a4b2e35a41c6c4624ab\", \r\n    \"date\": \"2023-09-11T12:00:00.000Z\", \r\n    \"categoryId\": \"5f5b6a4b2e35a41c6c4624ac\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "All expenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"expenses"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "get categories none created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Correct category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"category_id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function () {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.categoryName).to.eql(\"food\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoryName\": \"food\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Same category name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoryName\": \"food\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "All categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Category by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/categories/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Category by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"category name updated\", function() {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.categoryName).to.eql(\"snacks\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoryName\": \"snacks\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/categories/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoryName\": \"snacks\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/categories/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Expense Relationships",
			"item": [
				{
					"name": "All expenses invalid user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/:username/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses"
							],
							"variable": [
								{
									"key": "username",
									"value": "invaliduser"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New expense invalid user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"expense_id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 404\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Food\",\r\n    \"amount\": 200,\r\n    \"date\": \"1970-01-01T05:37:10.109Z\",\r\n    \"categoryId\": \"6502e6023e219e1e003eeae1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses"
							],
							"variable": [
								{
									"key": "username",
									"value": "invaliduser"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.username).to.eql(\"user1\");\r",
									"  pm.expect(jsonData.password).to.eql(\"123\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);\r",
									"token = bodyData.token;\r",
									"pm.environment.set(\"access_token\", token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "New expense from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"expense_id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Food\",\r\n    \"amount\": 200,\r\n    \"date\": \"1970-01-01T05:37:10.109Z\",\r\n    \"categoryId\": \"6502e6023e219e1e003eeae1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "All user expenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/:username/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific expense from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								},
								{
									"key": "id",
									"value": "{{expense_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific expense from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/:username/expenses/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses",
								":id"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								},
								{
									"key": "id",
									"value": "{{expense_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Testing Sorting/filtering",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"expenseId\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function (){\r",
									"    pm.response.to.have.status(200);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Attribute name is part of Expense entity\", function(){\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(pm.response.json()).to.have.property(\"amount\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Test Expense2\",\r\n    \"amount\": 40.0,\r\n    \"date\": \"2023-05-11\", \r\n    \"categoryId\": \"5f5b6a4b2e35a41c6c4624ac\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Testing sorting/filtering 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"expenseId\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function (){\r",
									"    pm.response.to.have.status(200);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Attribute name is part of Expense entity\", function(){\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(pm.response.json()).to.have.property(\"amount\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Test Expense3\",\r\n    \"amount\": 50.0,\r\n    \"date\": \"2023-06-11\", \r\n    \"categoryId\": \"5f5b6a4b2e35a41c6c4624ac\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Testing sorting/filtering 3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"expenseId\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function (){\r",
									"    pm.response.to.have.status(200);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Attribute name is part of Expense entity\", function(){\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(pm.response.json()).to.have.property(\"amount\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Test Expense4\",\r\n    \"amount\": 110.0,\r\n    \"date\": \"2023-09-30\", \r\n    \"categoryId\": \"5f5b6a4b2e35a41c6c4624ac\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sorting (ascending) + filtering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function (){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check ascending order\", function () {\r",
									"    const expenses = pm.response.json();\r",
									"\r",
									"    // Check if expenses are sorted in ascending order based on expense'amount'\r",
									"    for (let i = 1; i < expenses.length; i++) {\r",
									"        const currentAmount = expenses[i].amount;\r",
									"        const previousAmount = expenses[i - 1].amount;\r",
									"        pm.expect(currentAmount).to.be.at.least(previousAmount);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/expenses?startDate=2023-01-01&endDate=2023-12-31&order=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2023-01-01"
								},
								{
									"key": "endDate",
									"value": "2023-12-31"
								},
								{
									"key": "order",
									"value": "asc"
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sorting (descending) + filtering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function (){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check descending order\", function () {\r",
									"    const expenses = pm.response.json();\r",
									"    // Check if expenses are sorted in descending order based on expense'amount'\r",
									"    for (let i = 1; i < expenses.length; i++) {\r",
									"        const currentAmount = expenses[i].amount;\r",
									"        const previousAmount = expenses[i - 1].amount;\r",
									"        pm.expect(currentAmount).to.be.at.most(previousAmount);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/expenses/?startDate=2023-06-01&endDate=2023-12-31&order=desc",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"expenses",
								""
							],
							"query": [
								{
									"key": "startDate",
									"value": "2023-06-01"
								},
								{
									"key": "endDate",
									"value": "2023-12-31"
								},
								{
									"key": "order",
									"value": "desc"
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User by username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/users/:username",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Budget Relationships",
			"item": [
				{
					"name": "All budgets invalid user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/:username/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"budgets"
							],
							"variable": [
								{
									"key": "username",
									"value": "invaliduser"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New budget invalid user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Summer budget\",\r\n    \"amount\": 40000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"budgets"
							],
							"variable": [
								{
									"key": "username",
									"value": "invaliduser"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"  var jsonData = pm.response.json();\r",
									"  pm.expect(jsonData.username).to.eql(\"user1\");\r",
									"  pm.expect(jsonData.password).to.eql(\"123\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"bodyData = JSON.parse(responseBody);\r",
									"token = bodyData.token;\r",
									"pm.environment.set(\"access_token\", token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "New budget from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Summer budget\",\r\n    \"amount\": 40000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"budgets"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "All user budgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/:username/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"budgets"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific budget from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/:username/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific budget from user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/:username/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								":username",
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "username",
									"value": "user1"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Budgets",
			"item": [
				{
					"name": "Correct budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"id\", jsonData._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Summer budget\",\r\n    \"amount\": 40000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "All budgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Budget by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Budget by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Updated Budget\",\r\n\"amount\": 15000}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Budget by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 35000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "budget by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Correct budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"id\", jsonData._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Summer budget 2.0\",\r\n    \"amount\": 30000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "All budgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Updated Budget\",\r\n\"amount\": 15000}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": \"35000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"amount\": \"20000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"  pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Correct budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"id\", jsonData._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Summer budget 3.0\",\r\n    \"amount\": 25000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"  pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"\",\r\n\"amount\": 15000}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category Expense Relationships",
			"item": [
				{
					"name": "Correct category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"category_id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoryName\": \"Clothes\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Expense from category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"expense_id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Food\",\r\n    \"amount\": 200,\r\n    \"date\": \"1970-01-01T05:37:10.109Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories/:id/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id",
								"expenses"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Expenses by category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/categories/:id/expenses",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id",
								"expenses"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific expense from category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "authorization",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Food\",\r\n    \"amount\": \"200\",\r\n    \"userId\": \"6502e6023e219e1e003eeae7\",\r\n    \"date\": 20230109,\r\n    \"budgetId\": \"6502e6023e219e1e003eeae1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/categories/:id/expenses/:expenseid",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id",
								"expenses",
								":expenseid"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								},
								{
									"key": "expenseid",
									"value": "{{expense_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific expense from category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/categories/:id/expenses/:expenseid",
							"host": [
								"{{host}}"
							],
							"path": [
								"categories",
								":id",
								"expenses",
								":expenseid"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{category_id}}"
								},
								{
									"key": "expenseid",
									"value": "{{expense_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Budget Category Relationships",
			"item": [
				{
					"name": "Correct budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Monthly\",\r\n    \"amount\": 18000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Category from budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"response = JSON.parse(responseBody);\r",
									"pm.environment.set(\"category_id\", response._id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoryName\": \"Monthly bill\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets/:id/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id",
								"categories"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Categories by budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/budgets/:id/categories",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id",
								"categories"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific category from budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/budgets/:id/categories/:categoryId",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id",
								"categories",
								":categoryId"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "categoryId",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Specific category from budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/budgets/:id/categories/:categoryId",
							"host": [
								"{{host}}"
							],
							"path": [
								"budgets",
								":id",
								"categories",
								":categoryId"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "categoryId",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "loginToken",
			"value": "123"
		},
		{
			"key": "access_token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIxIiwidXNlcklkIjoiNjUwMDYxZjM0ZWNjNDA3MTRhM2JiZTZlIiwiaWF0IjoxNjk0NTI2MTA1LCJleHAiOjE2OTQ1MzMzMDV9.0OqVYVcjKl2Lt3yzXeTKRil9yNdqeyxDLqg0gR-xeLk"
		}
	]
}